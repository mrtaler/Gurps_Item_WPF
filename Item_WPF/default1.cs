//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF
{
    using System;
    using System.Collections.Generic;
    
    public partial class default1 : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        private int _PrimaryKey;
    	public int PrimaryKey 
    	{ 
    		get
    		{
    			return _PrimaryKey;
    		} 
    		set
    		{
    			if (_PrimaryKey != value)
    			{
    				_PrimaryKey = value;
    				OnPropertyChanged("PrimaryKey");
    			}
    		}
    	}
        private string _type;
    	public string type 
    	{ 
    		get
    		{
    			return _type;
    		} 
    		set
    		{
    			if (_type != value)
    			{
    				_type = value;
    				OnPropertyChanged("type");
    			}
    		}
    	}
        private string _modifier;
    	public string modifier 
    	{ 
    		get
    		{
    			return _modifier;
    		} 
    		set
    		{
    			if (_modifier != value)
    			{
    				_modifier = value;
    				OnPropertyChanged("modifier");
    			}
    		}
    	}
        private string _name;
    	public string name 
    	{ 
    		get
    		{
    			return _name;
    		} 
    		set
    		{
    			if (_name != value)
    			{
    				_name = value;
    				OnPropertyChanged("name");
    			}
    		}
    	}
        private string _specialization;
    	public string specialization 
    	{ 
    		get
    		{
    			return _specialization;
    		} 
    		set
    		{
    			if (_specialization != value)
    			{
    				_specialization = value;
    				OnPropertyChanged("specialization");
    			}
    		}
    	}
        private string _FK_skill;
    	public string FK_skill 
    	{ 
    		get
    		{
    			return _FK_skill;
    		} 
    		set
    		{
    			if (_FK_skill != value)
    			{
    				_FK_skill = value;
    				OnPropertyChanged("FK_skill");
    			}
    		}
    	}
        private string _FK_technique;
    	public string FK_technique 
    	{ 
    		get
    		{
    			return _FK_technique;
    		} 
    		set
    		{
    			if (_FK_technique != value)
    			{
    				_FK_technique = value;
    				OnPropertyChanged("FK_technique");
    			}
    		}
    	}
    
        private skill1 _skill1;
            public virtual skill1 skill1
            {
                get { return _skill1; }
                set
                { if(_skill1 != value)
                    {    _skill1 = value;    OnPropertyChanged("skill1");   }
                }
            } 
        private technique _technique;
            public virtual technique technique
            {
                get { return _technique; }
                set
                { if(_technique != value)
                    {    _technique = value;    OnPropertyChanged("technique");   }
                }
            } 
    }
}
