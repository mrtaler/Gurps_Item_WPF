//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class Advantage : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Advantage()
        {
            this.Advantage1 = new HashSet<Advantage>();
            this.SkillBonus = new HashSet<SkillBonu>();
            this.Advantage11 = new HashSet<Advantage>();
            this.Advantages = new HashSet<Advantage>();
            this.TypeAdvs = new HashSet<TypeAdv>();
        }
    
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _Name;
    	public string Name 
    	{ 
    		get
    		{
    			return _Name;
    		} 
    		set
    		{
    			if (_Name != value)
    			{
    				_Name = value;
    				OnPropertyChanged("Name");
    			}
    		}
    	}
        private Nullable<int> _idCategory;
    	public Nullable<int> idCategory 
    	{ 
    		get
    		{
    			return _idCategory;
    		} 
    		set
    		{
    			if (_idCategory != value)
    			{
    				_idCategory = value;
    				OnPropertyChanged("idCategory");
    			}
    		}
    	}
        private Nullable<int> _Cost;
    	public Nullable<int> Cost 
    	{ 
    		get
    		{
    			return _Cost;
    		} 
    		set
    		{
    			if (_Cost != value)
    			{
    				_Cost = value;
    				OnPropertyChanged("Cost");
    			}
    		}
    	}
        private Nullable<int> _idType;
    	public Nullable<int> idType 
    	{ 
    		get
    		{
    			return _idType;
    		} 
    		set
    		{
    			if (_idType != value)
    			{
    				_idType = value;
    				OnPropertyChanged("idType");
    			}
    		}
    	}
        private string _Referense;
    	public string Referense 
    	{ 
    		get
    		{
    			return _Referense;
    		} 
    		set
    		{
    			if (_Referense != value)
    			{
    				_Referense = value;
    				OnPropertyChanged("Referense");
    			}
    		}
    	}
        private string _Notes;
    	public string Notes 
    	{ 
    		get
    		{
    			return _Notes;
    		} 
    		set
    		{
    			if (_Notes != value)
    			{
    				_Notes = value;
    				OnPropertyChanged("Notes");
    			}
    		}
    	}
        private Nullable<int> _ParentAdv;
    	public Nullable<int> ParentAdv 
    	{ 
    		get
    		{
    			return _ParentAdv;
    		} 
    		set
    		{
    			if (_ParentAdv != value)
    			{
    				_ParentAdv = value;
    				OnPropertyChanged("ParentAdv");
    			}
    		}
    	}
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Advantage> _Advantage1;
            public virtual ICollection<Advantage> Advantage1
            {
                get { return _Advantage1; }
                set
                { if(_Advantage1 != value)
                    {    _Advantage1 = value;    OnPropertyChanged("Advantage1");   }
                }
            } 
        private Advantage _Advantage2;
            public virtual Advantage Advantage2
            {
                get { return _Advantage2; }
                set
                { if(_Advantage2 != value)
                    {    _Advantage2 = value;    OnPropertyChanged("Advantage2");   }
                }
            } 
        private GurpsAdvCategory _GurpsAdvCategory;
            public virtual GurpsAdvCategory GurpsAdvCategory
            {
                get { return _GurpsAdvCategory; }
                set
                { if(_GurpsAdvCategory != value)
                    {    _GurpsAdvCategory = value;    OnPropertyChanged("GurpsAdvCategory");   }
                }
            } 
        private AdvantageMod _AdvantageMod;
            public virtual AdvantageMod AdvantageMod
            {
                get { return _AdvantageMod; }
                set
                { if(_AdvantageMod != value)
                    {    _AdvantageMod = value;    OnPropertyChanged("AdvantageMod");   }
                }
            } 
        private AttributeBonu _AttributeBonu;
            public virtual AttributeBonu AttributeBonu
            {
                get { return _AttributeBonu; }
                set
                { if(_AttributeBonu != value)
                    {    _AttributeBonu = value;    OnPropertyChanged("AttributeBonu");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<SkillBonu> _SkillBonus;
            public virtual ICollection<SkillBonu> SkillBonus
            {
                get { return _SkillBonus; }
                set
                { if(_SkillBonus != value)
                    {    _SkillBonus = value;    OnPropertyChanged("SkillBonus");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Advantage> _Advantage11;
            public virtual ICollection<Advantage> Advantage11
            {
                get { return _Advantage11; }
                set
                { if(_Advantage11 != value)
                    {    _Advantage11 = value;    OnPropertyChanged("Advantage11");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Advantage> _Advantages;
            public virtual ICollection<Advantage> Advantages
            {
                get { return _Advantages; }
                set
                { if(_Advantages != value)
                    {    _Advantages = value;    OnPropertyChanged("Advantages");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<TypeAdv> _TypeAdvs;
            public virtual ICollection<TypeAdv> TypeAdvs
            {
                get { return _TypeAdvs; }
                set
                { if(_TypeAdvs != value)
                    {    _TypeAdvs = value;    OnPropertyChanged("TypeAdvs");   }
                }
            } 
    }
}
