//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class Advantage : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Advantage()
        {
            this.prereq_listDB = new HashSet<prereq_listDB>();
        }
    
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _name;
    	public string name 
    	{ 
    		get
    		{
    			return _name;
    		} 
    		set
    		{
    			if (_name != value)
    			{
    				_name = value;
    				OnPropertyChanged("name");
    			}
    		}
    	}
        private string _nameCompare;
    	public string nameCompare 
    	{ 
    		get
    		{
    			return _nameCompare;
    		} 
    		set
    		{
    			if (_nameCompare != value)
    			{
    				_nameCompare = value;
    				OnPropertyChanged("nameCompare");
    			}
    		}
    	}
        private string _typeadc;
    	public string typeadc 
    	{ 
    		get
    		{
    			return _typeadc;
    		} 
    		set
    		{
    			if (_typeadc != value)
    			{
    				_typeadc = value;
    				OnPropertyChanged("typeadc");
    			}
    		}
    	}
        private string _levels;
    	public string levels 
    	{ 
    		get
    		{
    			return _levels;
    		} 
    		set
    		{
    			if (_levels != value)
    			{
    				_levels = value;
    				OnPropertyChanged("levels");
    			}
    		}
    	}
        private string _points_per_level;
    	public string points_per_level 
    	{ 
    		get
    		{
    			return _points_per_level;
    		} 
    		set
    		{
    			if (_points_per_level != value)
    			{
    				_points_per_level = value;
    				OnPropertyChanged("points_per_level");
    			}
    		}
    	}
        private string _base_points;
    	public string base_points 
    	{ 
    		get
    		{
    			return _base_points;
    		} 
    		set
    		{
    			if (_base_points != value)
    			{
    				_base_points = value;
    				OnPropertyChanged("base_points");
    			}
    		}
    	}
        private string _reference;
    	public string reference 
    	{ 
    		get
    		{
    			return _reference;
    		} 
    		set
    		{
    			if (_reference != value)
    			{
    				_reference = value;
    				OnPropertyChanged("reference");
    			}
    		}
    	}
        private string _notes;
    	public string notes 
    	{ 
    		get
    		{
    			return _notes;
    		} 
    		set
    		{
    			if (_notes != value)
    			{
    				_notes = value;
    				OnPropertyChanged("notes");
    			}
    		}
    	}
        private string _cr;
    	public string cr 
    	{ 
    		get
    		{
    			return _cr;
    		} 
    		set
    		{
    			if (_cr != value)
    			{
    				_cr = value;
    				OnPropertyChanged("cr");
    			}
    		}
    	}
        private string _versionadv;
    	public string versionadv 
    	{ 
    		get
    		{
    			return _versionadv;
    		} 
    		set
    		{
    			if (_versionadv != value)
    			{
    				_versionadv = value;
    				OnPropertyChanged("versionadv");
    			}
    		}
    	}
        private string _round_down;
    	public string round_down 
    	{ 
    		get
    		{
    			return _round_down;
    		} 
    		set
    		{
    			if (_round_down != value)
    			{
    				_round_down = value;
    				OnPropertyChanged("round_down");
    			}
    		}
    	}
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<prereq_listDB> _prereq_listDB;
            public virtual ICollection<prereq_listDB> prereq_listDB
            {
                get { return _prereq_listDB; }
                set
                { if(_prereq_listDB != value)
                    {    _prereq_listDB = value;    OnPropertyChanged("prereq_listDB");   }
                }
            } 
    }
}
