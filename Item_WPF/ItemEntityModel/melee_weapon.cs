//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class melee_weapon : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public melee_weapon()
        {
            this.DefSkillSomes = new HashSet<DefSkillSome>();
        }
    
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _damage;
    	public string damage 
    	{ 
    		get
    		{
    			return _damage;
    		} 
    		set
    		{
    			if (_damage != value)
    			{
    				_damage = value;
    				OnPropertyChanged("damage");
    			}
    		}
    	}
        private string _strength;
    	public string strength 
    	{ 
    		get
    		{
    			return _strength;
    		} 
    		set
    		{
    			if (_strength != value)
    			{
    				_strength = value;
    				OnPropertyChanged("strength");
    			}
    		}
    	}
        private string _usage;
    	public string usage 
    	{ 
    		get
    		{
    			return _usage;
    		} 
    		set
    		{
    			if (_usage != value)
    			{
    				_usage = value;
    				OnPropertyChanged("usage");
    			}
    		}
    	}
        private string _reach;
    	public string reach 
    	{ 
    		get
    		{
    			return _reach;
    		} 
    		set
    		{
    			if (_reach != value)
    			{
    				_reach = value;
    				OnPropertyChanged("reach");
    			}
    		}
    	}
        private string _parry;
    	public string parry 
    	{ 
    		get
    		{
    			return _parry;
    		} 
    		set
    		{
    			if (_parry != value)
    			{
    				_parry = value;
    				OnPropertyChanged("parry");
    			}
    		}
    	}
        private string _block;
    	public string block 
    	{ 
    		get
    		{
    			return _block;
    		} 
    		set
    		{
    			if (_block != value)
    			{
    				_block = value;
    				OnPropertyChanged("block");
    			}
    		}
    	}
        private Nullable<int> _idAdv;
    	public Nullable<int> idAdv 
    	{ 
    		get
    		{
    			return _idAdv;
    		} 
    		set
    		{
    			if (_idAdv != value)
    			{
    				_idAdv = value;
    				OnPropertyChanged("idAdv");
    			}
    		}
    	}
    
        private Advantage _Advantage;
            public virtual Advantage Advantage
            {
                get { return _Advantage; }
                set
                { if(_Advantage != value)
                    {    _Advantage = value;    OnPropertyChanged("Advantage");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<DefSkillSome> _DefSkillSomes;
            public virtual ICollection<DefSkillSome> DefSkillSomes
            {
                get { return _DefSkillSomes; }
                set
                { if(_DefSkillSomes != value)
                    {    _DefSkillSomes = value;    OnPropertyChanged("DefSkillSomes");   }
                }
            } 
    }
}
