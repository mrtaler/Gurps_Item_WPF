//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class modifier : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _name;
    	public string name 
    	{ 
    		get
    		{
    			return _name;
    		} 
    		set
    		{
    			if (_name != value)
    			{
    				_name = value;
    				OnPropertyChanged("name");
    			}
    		}
    	}
        private string _nameC;
    	public string nameC 
    	{ 
    		get
    		{
    			return _nameC;
    		} 
    		set
    		{
    			if (_nameC != value)
    			{
    				_nameC = value;
    				OnPropertyChanged("nameC");
    			}
    		}
    	}
        private string _notes;
    	public string notes 
    	{ 
    		get
    		{
    			return _notes;
    		} 
    		set
    		{
    			if (_notes != value)
    			{
    				_notes = value;
    				OnPropertyChanged("notes");
    			}
    		}
    	}
        private string _notesC;
    	public string notesC 
    	{ 
    		get
    		{
    			return _notesC;
    		} 
    		set
    		{
    			if (_notesC != value)
    			{
    				_notesC = value;
    				OnPropertyChanged("notesC");
    			}
    		}
    	}
        private string _levels;
    	public string levels 
    	{ 
    		get
    		{
    			return _levels;
    		} 
    		set
    		{
    			if (_levels != value)
    			{
    				_levels = value;
    				OnPropertyChanged("levels");
    			}
    		}
    	}
        private string _reference;
    	public string reference 
    	{ 
    		get
    		{
    			return _reference;
    		} 
    		set
    		{
    			if (_reference != value)
    			{
    				_reference = value;
    				OnPropertyChanged("reference");
    			}
    		}
    	}
        private string _affects;
    	public string affects 
    	{ 
    		get
    		{
    			return _affects;
    		} 
    		set
    		{
    			if (_affects != value)
    			{
    				_affects = value;
    				OnPropertyChanged("affects");
    			}
    		}
    	}
        private string _version;
    	public string version 
    	{ 
    		get
    		{
    			return _version;
    		} 
    		set
    		{
    			if (_version != value)
    			{
    				_version = value;
    				OnPropertyChanged("version");
    			}
    		}
    	}
        private string _enabled;
    	public string enabled 
    	{ 
    		get
    		{
    			return _enabled;
    		} 
    		set
    		{
    			if (_enabled != value)
    			{
    				_enabled = value;
    				OnPropertyChanged("enabled");
    			}
    		}
    	}
        private Nullable<int> _idAdv;
    	public Nullable<int> idAdv 
    	{ 
    		get
    		{
    			return _idAdv;
    		} 
    		set
    		{
    			if (_idAdv != value)
    			{
    				_idAdv = value;
    				OnPropertyChanged("idAdv");
    			}
    		}
    	}
        private string _Cost;
    	public string Cost 
    	{ 
    		get
    		{
    			return _Cost;
    		} 
    		set
    		{
    			if (_Cost != value)
    			{
    				_Cost = value;
    				OnPropertyChanged("Cost");
    			}
    		}
    	}
        private string _CostType;
    	public string CostType 
    	{ 
    		get
    		{
    			return _CostType;
    		} 
    		set
    		{
    			if (_CostType != value)
    			{
    				_CostType = value;
    				OnPropertyChanged("CostType");
    			}
    		}
    	}
    
        private Advantage _Advantage;
            public virtual Advantage Advantage
            {
                get { return _Advantage; }
                set
                { if(_Advantage != value)
                    {    _Advantage = value;    OnPropertyChanged("Advantage");   }
                }
            } 
    }
}
