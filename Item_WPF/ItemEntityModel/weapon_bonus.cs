//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class weapon_bonus : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public weapon_bonus()
        {
            this.AmountAtributes = new HashSet<AmountAtribute>();
        }
    
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _nameCompare;
    	public string nameCompare 
    	{ 
    		get
    		{
    			return _nameCompare;
    		} 
    		set
    		{
    			if (_nameCompare != value)
    			{
    				_nameCompare = value;
    				OnPropertyChanged("nameCompare");
    			}
    		}
    	}
        private string _name;
    	public string name 
    	{ 
    		get
    		{
    			return _name;
    		} 
    		set
    		{
    			if (_name != value)
    			{
    				_name = value;
    				OnPropertyChanged("name");
    			}
    		}
    	}
        private string _specializationCompare;
    	public string specializationCompare 
    	{ 
    		get
    		{
    			return _specializationCompare;
    		} 
    		set
    		{
    			if (_specializationCompare != value)
    			{
    				_specializationCompare = value;
    				OnPropertyChanged("specializationCompare");
    			}
    		}
    	}
        private string _specialization;
    	public string specialization 
    	{ 
    		get
    		{
    			return _specialization;
    		} 
    		set
    		{
    			if (_specialization != value)
    			{
    				_specialization = value;
    				OnPropertyChanged("specialization");
    			}
    		}
    	}
        private string _levelCompare;
    	public string levelCompare 
    	{ 
    		get
    		{
    			return _levelCompare;
    		} 
    		set
    		{
    			if (_levelCompare != value)
    			{
    				_levelCompare = value;
    				OnPropertyChanged("levelCompare");
    			}
    		}
    	}
        private string _level;
    	public string level 
    	{ 
    		get
    		{
    			return _level;
    		} 
    		set
    		{
    			if (_level != value)
    			{
    				_level = value;
    				OnPropertyChanged("level");
    			}
    		}
    	}
        private Nullable<int> _FK_Skill;
    	public Nullable<int> FK_Skill 
    	{ 
    		get
    		{
    			return _FK_Skill;
    		} 
    		set
    		{
    			if (_FK_Skill != value)
    			{
    				_FK_Skill = value;
    				OnPropertyChanged("FK_Skill");
    			}
    		}
    	}
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<AmountAtribute> _AmountAtributes;
            public virtual ICollection<AmountAtribute> AmountAtributes
            {
                get { return _AmountAtributes; }
                set
                { if(_AmountAtributes != value)
                    {    _AmountAtributes = value;    OnPropertyChanged("AmountAtributes");   }
                }
            } 
        private GurpsSkill _GurpsSkill;
            public virtual GurpsSkill GurpsSkill
            {
                get { return _GurpsSkill; }
                set
                { if(_GurpsSkill != value)
                    {    _GurpsSkill = value;    OnPropertyChanged("GurpsSkill");   }
                }
            } 
    }
}
