//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class weapon_bonus : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public weapon_bonus()
        {
            this.amounts = new HashSet<amount>();
            this.levels = new HashSet<level>();
            this.name1 = new HashSet<name1>();
            this.specialization1 = new HashSet<specialization1>();
        }
    
        private string _PrimaryKey;
    	public string PrimaryKey 
    	{ 
    		get
    		{
    			return _PrimaryKey;
    		} 
    		set
    		{
    			if (_PrimaryKey != value)
    			{
    				_PrimaryKey = value;
    				OnPropertyChanged("PrimaryKey");
    			}
    		}
    	}
        private string _FK_skill;
    	public string FK_skill 
    	{ 
    		get
    		{
    			return _FK_skill;
    		} 
    		set
    		{
    			if (_FK_skill != value)
    			{
    				_FK_skill = value;
    				OnPropertyChanged("FK_skill");
    			}
    		}
    	}
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<amount> _amounts;
            public virtual ICollection<amount> amounts
            {
                get { return _amounts; }
                set
                { if(_amounts != value)
                    {    _amounts = value;    OnPropertyChanged("amounts");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<level> _levels;
            public virtual ICollection<level> levels
            {
                get { return _levels; }
                set
                { if(_levels != value)
                    {    _levels = value;    OnPropertyChanged("levels");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<name1> _name1;
            public virtual ICollection<name1> name1
            {
                get { return _name1; }
                set
                { if(_name1 != value)
                    {    _name1 = value;    OnPropertyChanged("name1");   }
                }
            } 
        private skill1 _skill1;
            public virtual skill1 skill1
            {
                get { return _skill1; }
                set
                { if(_skill1 != value)
                    {    _skill1 = value;    OnPropertyChanged("skill1");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<specialization1> _specialization1;
            public virtual ICollection<specialization1> specialization1
            {
                get { return _specialization1; }
                set
                { if(_specialization1 != value)
                    {    _specialization1 = value;    OnPropertyChanged("specialization1");   }
                }
            } 
    }
}
