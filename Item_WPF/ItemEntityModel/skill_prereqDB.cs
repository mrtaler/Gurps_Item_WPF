//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF.ItemEntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class skill_prereqDB : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _nameCompare;
    	public string nameCompare 
    	{ 
    		get
    		{
    			return _nameCompare;
    		} 
    		set
    		{
    			if (_nameCompare != value)
    			{
    				_nameCompare = value;
    				OnPropertyChanged("nameCompare");
    			}
    		}
    	}
        private string _name;
    	public string name 
    	{ 
    		get
    		{
    			return _name;
    		} 
    		set
    		{
    			if (_name != value)
    			{
    				_name = value;
    				OnPropertyChanged("name");
    			}
    		}
    	}
        private string _specializationCompare;
    	public string specializationCompare 
    	{ 
    		get
    		{
    			return _specializationCompare;
    		} 
    		set
    		{
    			if (_specializationCompare != value)
    			{
    				_specializationCompare = value;
    				OnPropertyChanged("specializationCompare");
    			}
    		}
    	}
        private string _specialization;
    	public string specialization 
    	{ 
    		get
    		{
    			return _specialization;
    		} 
    		set
    		{
    			if (_specialization != value)
    			{
    				_specialization = value;
    				OnPropertyChanged("specialization");
    			}
    		}
    	}
        private string _levelSPCompare;
    	public string levelSPCompare 
    	{ 
    		get
    		{
    			return _levelSPCompare;
    		} 
    		set
    		{
    			if (_levelSPCompare != value)
    			{
    				_levelSPCompare = value;
    				OnPropertyChanged("levelSPCompare");
    			}
    		}
    	}
        private string _levelSP;
    	public string levelSP 
    	{ 
    		get
    		{
    			return _levelSP;
    		} 
    		set
    		{
    			if (_levelSP != value)
    			{
    				_levelSP = value;
    				OnPropertyChanged("levelSP");
    			}
    		}
    	}
        private string _has;
    	public string has 
    	{ 
    		get
    		{
    			return _has;
    		} 
    		set
    		{
    			if (_has != value)
    			{
    				_has = value;
    				OnPropertyChanged("has");
    			}
    		}
    	}
        private Nullable<int> _idprereq_list;
    	public Nullable<int> idprereq_list 
    	{ 
    		get
    		{
    			return _idprereq_list;
    		} 
    		set
    		{
    			if (_idprereq_list != value)
    			{
    				_idprereq_list = value;
    				OnPropertyChanged("idprereq_list");
    			}
    		}
    	}
    
        private prereq_listDB _prereq_listDB;
            public virtual prereq_listDB prereq_listDB
            {
                get { return _prereq_listDB; }
                set
                { if(_prereq_listDB != value)
                    {    _prereq_listDB = value;    OnPropertyChanged("prereq_listDB");   }
                }
            } 
    }
}
