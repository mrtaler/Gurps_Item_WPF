//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF
{
    using System;
    using System.Collections.Generic;
    
    public partial class skill_container : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public skill_container()
        {
            this.skill1 = new HashSet<skill1>();
            this.skill_container1 = new HashSet<skill_container>();
        }
    
        private string _PrimaryKey;
    	public string PrimaryKey 
    	{ 
    		get
    		{
    			return _PrimaryKey;
    		} 
    		set
    		{
    			if (_PrimaryKey != value)
    			{
    				_PrimaryKey = value;
    				OnPropertyChanged("PrimaryKey");
    			}
    		}
    	}
        private string _version;
    	public string version 
    	{ 
    		get
    		{
    			return _version;
    		} 
    		set
    		{
    			if (_version != value)
    			{
    				_version = value;
    				OnPropertyChanged("version");
    			}
    		}
    	}
        private string _open;
    	public string open 
    	{ 
    		get
    		{
    			return _open;
    		} 
    		set
    		{
    			if (_open != value)
    			{
    				_open = value;
    				OnPropertyChanged("open");
    			}
    		}
    	}
        private string _name;
    	public string name 
    	{ 
    		get
    		{
    			return _name;
    		} 
    		set
    		{
    			if (_name != value)
    			{
    				_name = value;
    				OnPropertyChanged("name");
    			}
    		}
    	}
        private string _reference;
    	public string reference 
    	{ 
    		get
    		{
    			return _reference;
    		} 
    		set
    		{
    			if (_reference != value)
    			{
    				_reference = value;
    				OnPropertyChanged("reference");
    			}
    		}
    	}
        private string _notes;
    	public string notes 
    	{ 
    		get
    		{
    			return _notes;
    		} 
    		set
    		{
    			if (_notes != value)
    			{
    				_notes = value;
    				OnPropertyChanged("notes");
    			}
    		}
    	}
        private string _FK_skill_container;
    	public string FK_skill_container 
    	{ 
    		get
    		{
    			return _FK_skill_container;
    		} 
    		set
    		{
    			if (_FK_skill_container != value)
    			{
    				_FK_skill_container = value;
    				OnPropertyChanged("FK_skill_container");
    			}
    		}
    	}
        private string _FK_skill_list;
    	public string FK_skill_list 
    	{ 
    		get
    		{
    			return _FK_skill_list;
    		} 
    		set
    		{
    			if (_FK_skill_list != value)
    			{
    				_FK_skill_list = value;
    				OnPropertyChanged("FK_skill_list");
    			}
    		}
    	}
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<skill1> _skill1;
            public virtual ICollection<skill1> skill1
            {
                get { return _skill1; }
                set
                { if(_skill1 != value)
                    {    _skill1 = value;    OnPropertyChanged("skill1");   }
                }
            } 
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<skill_container> _skill_container1;
            public virtual ICollection<skill_container> skill_container1
            {
                get { return _skill_container1; }
                set
                { if(_skill_container1 != value)
                    {    _skill_container1 = value;    OnPropertyChanged("skill_container1");   }
                }
            } 
        private skill_container _skill_container2;
            public virtual skill_container skill_container2
            {
                get { return _skill_container2; }
                set
                { if(_skill_container2 != value)
                    {    _skill_container2 = value;    OnPropertyChanged("skill_container2");   }
                }
            } 
        private skill_list _skill_list;
            public virtual skill_list skill_list
            {
                get { return _skill_list; }
                set
                { if(_skill_list != value)
                    {    _skill_list = value;    OnPropertyChanged("skill_list");   }
                }
            } 
    }
}
