//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Item_WPF
{
    using System;
    using System.Collections.Generic;
    
    public partial class G_AttachClass : System.ComponentModel.INotifyPropertyChanged
    {
     
     #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public G_AttachClass()
        {
            this.G_SubAttachClass = new HashSet<G_SubAttachClass>();
        }
    
        private int _id;
    	public int id 
    	{ 
    		get
    		{
    			return _id;
    		} 
    		set
    		{
    			if (_id != value)
    			{
    				_id = value;
    				OnPropertyChanged("id");
    			}
    		}
    	}
        private string _name_class;
    	public string name_class 
    	{ 
    		get
    		{
    			return _name_class;
    		} 
    		set
    		{
    			if (_name_class != value)
    			{
    				_name_class = value;
    				OnPropertyChanged("name_class");
    			}
    		}
    	}
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<G_SubAttachClass> _G_SubAttachClass;
            public virtual ICollection<G_SubAttachClass> G_SubAttachClass
            {
                get { return _G_SubAttachClass; }
                set
                { if(_G_SubAttachClass != value)
                    {    _G_SubAttachClass = value;    OnPropertyChanged("G_SubAttachClass");   }
                }
            } 
    }
}
